'name': 'HTML (JSON-T)'
'fileTypes': [
  'block'
  'item'
  'list'
  'preset'
  'region'
]
'foldingStartMarker': '(?x){.\\s*(if|section|repeated)[^(})]+}'
'foldingStopMarker': '(?x){.\\s*(end)[^(})]+}'
'patterns': [
  {
    'comment': 'Include HTML grammar as a starting point.'
    'include': 'text.html.basic'
  }
  {
    'name': 'comment.line.jsont'
    'begin': '{#'
    'end': '}'
  }
  {
    'name': 'comment.block.jsont'
    'begin': '{##BEGIN}'
    'end': '{##END}'
  }
  {
    'name': 'meta.scope.jsont'
    'begin': '({)'
    'captures':
      '1':
        'name': 'entity.other.jsont'
    'end': '(})'
    'patterns': [
      {
        'name': 'keyword.control.jsont'
        'match': '\\b.(section|repeated|end)\\b'
      }
      {
        'name': 'keyword.operator.jsont'
        'match': '\\b.(or|alternates with)\\b'
      }
      {
        'name': 'constant.character.jsont'
        'match': '\\b.(space|tab|newline|meta-left|meta-right)\\b'
      }
      {
        'include': '#formatter'
      }
    ]
  }
]
'repository':
  'formatter':
    'patterns': [
      {
        'name': 'support.function.with-args.jsont'
        'match': '\\|\\s+(?![\\.0-9])[a-zA-Z0-9_-]+\\:\\s+'
      }
      {
        'name': 'support.function.without-args.jsont'
        'match': '\\|\\s+(?![\\.0-9])[a-zA-Z0-9_-]+\\s+'
      }
    ]
  'assign_op':
    'patterns': [
      {
        'match': '/='
        'name': 'keyword.operator.assignment.augmented.liquid'
      }
    ]
  'logic_expression':
    'patterns': [
      {
        'match': '/='
        'name': 'keyword.operator.assignment.augmented.liquid'
      }
    ]
  'logic_op':
    'patterns': [
      {
        'match': '\\s+(and|or|not|contains|(\\!\\=|\\=\\=|<\\=|>\\=|<|>)\\s+'
        'name': 'keyword.operator.logical.liquid'
      }
    ]

'scopeName': 'text.html.jsont'
